#usda 1.0
(
    doc ="""Generated from node description file OgnHolonomicController.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_omni_isaac_wheeled_robots_HolonomicController" (
        docs="""Holonomic Controller"""
    )
    {
        token node:type = "omni.isaac.wheeled_robots.HolonomicController"
        int node:typeVersion = 1

        # 13 attributes
        custom double inputs:angularGain = 1 (
            docs="""angular gain"""
        )
        custom uint inputs:execIn (
            docs="""The input execution"""
        )
        custom double inputs:linearGain = 1 (
            docs="""linear gain"""
        )
        custom double inputs:maxAngularSpeed (
            docs="""maximum angular rotation speed allowed for the vehicle"""
        )
        custom double inputs:maxLinearSpeed (
            docs="""maximum speed allowed for the vehicle"""
        )
        custom double inputs:maxWheelSpeed (
            docs="""maximum rotation speed allowed for the wheel joints"""
        )
        custom double[] inputs:mecanumAngles = [] (
            docs="""angles of the mecanum wheels with respect to wheel's rotation axis"""
        )
        custom double3 inputs:upAxis = (0.0, 0.0, 0.0) (
            docs="""the rotation axis of the vehicle"""
        )
        custom token inputs:velocityCommands (
            docs="""velocity in x and y and rotation"""
        )
        custom double3 inputs:wheelAxis = (0.0, 0.0, 0.0) (
            docs="""the rotation axis of the wheels"""
        )
        custom double4[] inputs:wheelOrientations = [] (
            docs="""orientation of the wheel with respect to chassis' center of mass frame """
        )
        custom double3[] inputs:wheelPositions = [] (
            docs="""position of the wheel with respect to chassis' center of mass"""
        )
        custom double[] inputs:wheelRadius = [] (
            docs="""an array of wheel radius"""
        )

        # 3 attributes
        custom double[] outputs:jointEffortCommand (
            docs="""effort commands for the wheels joints"""
        )
        custom double[] outputs:jointPositionCommand (
            docs="""position commands for the wheel joints"""
        )
        custom double[] outputs:jointVelocityCommand (
            docs="""velocity commands for the wheels joints"""
        )
    }
}
