#usda 1.0
(
    doc ="""Generated from node description file OgnQuinticPathPlanner.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_omni_isaac_wheeled_robots_QuinticPathPlanner" (
        docs="""Quintic Path Planner For Wheeled robots"""
    )
    {
        token node:type = "omni.isaac.wheeled_robots.QuinticPathPlanner"
        int node:typeVersion = 1

        # 13 attributes
        custom quatd inputs:currentOrientation = (0.0, 0.0, 0.0, 0.0) (
            docs="""Current rotation of the robot as a quaternion (recommended to use Get Prim Local to World Transform node)"""
        )
        custom vector3d inputs:currentPosition = (0.0, 0.0, 0.0) (
            docs="""Current position of the robot (recommended to use Get Prim Local to World Transform node)"""
        )
        custom uint inputs:execIn (
            docs="""The input execution"""
        )
        custom double inputs:goalAccel = 0.02 (
            docs="""Goal acceleration"""
        )
        custom double inputs:goalVelocity = 0.5 (
            docs="""Goal velocity"""
        )
        custom double inputs:initialAccel = 0.02 (
            docs="""Initial acceleration"""
        )
        custom double inputs:initialVelocity = 0.5 (
            docs="""Initial velocity"""
        )
        custom double inputs:maxAccel = 1.5 (
            docs="""Max acceleration"""
        )
        custom double inputs:maxJerk = 0.3 (
            docs="""Max jerk"""
        )
        custom double inputs:step = 0.16666666667 (
            docs="""Step"""
        )
        custom quatd inputs:targetOrientation = (0.0, 0.0, 0.0, 0.0) (
            docs="""Target orientation (used if no targetPrim provided)"""
        )
        custom vector3d inputs:targetPosition = (0.0, 0.0, 0.0) (
            docs="""Target position (used if no targetPrim provided)"""
        )
        custom rel inputs:targetPrim (
            docs="""USD prim reference to the target position/orientation prim"""
        )

        # 4 attributes
        custom uint outputs:execOut (
            docs="""The output execution"""
        )
        custom double[] outputs:pathArrays (
            docs="""The path v, x, y, and yaw arrays"""
        )
        custom double3 outputs:target (
            docs="""Target position and orientation"""
        )
        custom bool outputs:targetChanged (
            docs="""Target position/orientation has changed"""
        )
    }
}
