#usda 1.0
(
    doc ="""Generated from node description file OgnWritePhysicsRigidPrimView.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_omni_replicator_isaac_OgnWritePhysicsRigidPrimView" (
        docs="""This node writes physics attributes to TensorAPI views"""
    )
    {
        token node:type = "omni.replicator.isaac.OgnWritePhysicsRigidPrimView"
        int node:typeVersion = 1

        # 11 attributes
        custom string inputs:attribute = "" (
            docs="""Name of attribute that is to be written"""
        )
        custom float[] inputs:dist_param_1 = [] (
            docs="""Distribution parameter 1"""
        )
        custom float[] inputs:dist_param_2 = [] (
            docs="""Distribution parameter 2"""
        )
        custom string inputs:distribution = "" (
            docs="""Type of distribution used to sample values"""
        )
        custom uint inputs:execIn (
            docs="""exec"""
        )
        custom int[] inputs:indices = [] (
            docs="""Indices of the environments to assign the physics attribute"""
        )
        custom int inputs:num_buckets = 0 (
            docs="""Number of buckets to randomize from"""
        )
        custom bool inputs:on_reset = false (
            docs="""indicates whether an on_reset context triggered the execution"""
        )
        custom string inputs:operation = "" (
            docs="""Type of randomization operation to be applied"""
        )
        custom string inputs:prims = "" (
            docs="""Name of registered view to randomize"""
        )
        custom float[] inputs:values = [] (
            docs="""Values to be assigned to the physics attribute"""
        )

        # 1 attribute
        custom uint outputs:execOut (
            docs="""exec"""
        )
    }
}
