#usda 1.0
(
    doc ="""Generated from node description file OgnIsaacGenerateRGBA.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_omni_isaac_core_nodes_IsaacGenerateRGBA" (
        docs="""Isaac Sim Node that generates a constant rgba buffer"""
    )
    {
        token node:type = "omni.isaac.core_nodes.IsaacGenerateRGBA"
        int node:typeVersion = 1

        # 3 attributes
        custom color4f inputs:color = (0.0, 0.0, 0.0, 0.0) (
            docs="""Color for output image"""
        )
        custom uint inputs:height = 100 (
            docs="""Height for output image"""
        )
        custom uint inputs:width = 100 (
            docs="""Width for output image"""
        )

        # 4 attributes
        custom uchar[] outputs:data = [] (
            docs="""Buffer rgba array data"""
        )
        custom token outputs:encoding (
            docs="""Encoding as a token"""
        )
        custom uint outputs:height (
            docs="""Height for output image"""
        )
        custom uint outputs:width (
            docs="""Width for output image"""
        )
    }
}
