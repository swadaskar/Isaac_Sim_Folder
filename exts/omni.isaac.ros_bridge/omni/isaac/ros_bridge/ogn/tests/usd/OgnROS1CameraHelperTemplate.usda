#usda 1.0
(
    doc ="""Generated from node description file OgnROS1CameraHelper.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_omni_isaac_ros_bridge_ROS1CameraHelper" (
        docs="""This node handles automation of the camera sensor pipeline"""
    )
    {
        token node:type = "omni.isaac.ros_bridge.ROS1CameraHelper"
        int node:typeVersion = 2

        # 12 attributes
        custom bool inputs:enableSemanticLabels = false (
            docs="""Enable publishing of semantic labels, applies only to instance_segmentation, semantic_segmentation, bbox_2d_tight, bbox_2d_loose, bbox_3d"""
        )
        custom uint inputs:execIn (
            docs="""Triggering this causes the sensor pipeline to be generated"""
        )
        custom string inputs:frameId = "sim_camera" (
            docs="""FrameId for ROS1 message"""
        )
        custom string inputs:nodeNamespace = "" (
            docs="""Namespace of ROS1 Node, prepends any published/subscribed topic by the node namespace"""
        )
        custom uint64 inputs:queueSize = 10 (
            docs="""The number of messages to queue up before throwing some away, in case messages are collected faster than they can be sent"""
        )
        custom token inputs:renderProductPath = "" (
            docs="""Path of the render product used for capturing data"""
        )
        custom bool inputs:resetSimulationTimeOnStop = false (
            docs="""If True the simulation time will reset when stop is pressed, False means time increases monotonically"""
        )
        custom string inputs:semanticLabelsTopicName = "semantic_labels" (
            docs="""Topic name used for publishing semantic labels, applies only to instance_segmentation, semantic_segmentation, bbox_2d_tight, bbox_2d_loose, bbox_3d"""
        )
        custom float2 inputs:stereoOffset = (0, 0) (
            docs="""Stereo offset (Tx, Ty) used when publishing the camera info topic"""
        )
        custom string inputs:topicName = "rgb" (
            docs="""Topic name for sensor data"""
        )
        custom token inputs:type = "rgb" (
            docs="""No documentation provided"""
        )
        custom token inputs:viewport = "" (
            docs="""DEPRECATED, use renderProductPath. Name of the desired viewport to publish"""
        )
    }
}
